<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.hyn</groupId>
  <artifactId>NewHello</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>NewHello Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
   		
    	<!-- Spring orm：整合第三方的orm实现，如hibernate，ibatis，jdo以及spring 的jpa实现 -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring tx：为JDBC、Hibernate、JDO、JPA等提供的一致的声明式和编程式事务管理。 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring test：对JUNIT等测试框架的简单封装 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring webmvc：包含SpringMVC框架相关的所有类。包含国际化、标签、Theme、视图展现的FreeMarker -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring Context：在基础IOC功能上提供扩展服务，此外还提供许多企业级服务的支持，-->
        <!-- 有邮件服务、任务调度、JNDI定位，EJB集成、远程访问、缓存以及多种视图层框架的支持。 --> 
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring Context Support：Spring context的扩展支持，用于MVC方面。 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring Beans：Spring IOC的基础实现，包含访问配置文件、创建和管理bean等。 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Spring JDBC：对JDBC 的简单封装 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>    
        <!-- aspectj依赖(spring依赖) -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <!-- jstl与taglibs标签依赖 -->
        <dependency>
    		<groupId>jstl</groupId>
    		<artifactId>jstl</artifactId>
    		<version>1.2</version>
		</dependency>
		<dependency>
    		<groupId>taglibs</groupId>
   		 	<artifactId>standard</artifactId>
    		<version>1.1.2</version>
		</dependency>
		
		<!-- 关于servlet的依赖包 -->
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
		
		<!-- 提供一些基础的通用拓展操作 -->
		<dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.2</version>
        </dependency>
        <!-- commons-fileupload用于文件上传 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!-- commons-dbcp用于管理连接数据库 -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
        </dependency>
        
        <!-- 提供普通注解功能 -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>
    
    	<!-- Hibernate的核心，缓存，和提供注解依赖包 -->
    	<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
        <!-- 提供缓存依赖功能 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>4.2.0.Final</version>
        </dependency>
        <!-- 提供hibernate注解功能 -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
        </dependency>
        <!-- 连接mysql数据库 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.1</version>
        </dependency>
  </dependencies>
  <build>
    <finalName>NewHello</finalName>
    
    <plugins>
        	<!-- maven插件 用于编译主源代码-->
        	<plugin>
      			<groupId>org.apache.maven.plugins</groupId>
      			<artifactId>maven-compiler-plugin</artifactId>
      			<configuration>
        		<source>1.8</source>
        		<target>1.8</target>
      			</configuration>
    		</plugin>
            <!-- tomcat插件 用于热部署-->
            <plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
				<url>http://localhost:8080/manager/text</url>
				<server>tomcat8</server>
				<username>admin</username>  
       		 	<password>123456</password> 
				<path>/${project.artifactId}</path>
                <charset>utf8</charset>
                <update>true</update>
                </configuration>
			</plugin>
        </plugins>
    
  </build>
  
  	<!-- 包依赖的版本 -->
  	<properties>
        <spring.version>4.2.2.RELEASE</spring.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <aspectj.version>1.8.1</aspectj.version>
        <mysql.version>5.1.29</mysql.version>
    </properties>
</project>
